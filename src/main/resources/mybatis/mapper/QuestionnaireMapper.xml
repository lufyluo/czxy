<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czxy.manage.dao.QuestionnaireMapper">
    <insert id="insert" parameterType="com.czxy.manage.model.vo.questionnaire.PaperCreateInfo" useGeneratedKeys="true"
            keyProperty="id">
        insert into w_paper (name, description, state)
        values (#{name}, #{description}, 0)
    </insert>
    <insert id="insertBySubmit" useGeneratedKeys="true" keyProperty="id">
        insert into w_paper_submit (paper_id, stem_id, option_id, user_id, answer_text)
        values (#{paperId}, #{stemId}, #{optionId}, #{userId}, #{answerText})
    </insert>
    <insert id="batchInsert">
        insert into w_paper_submit (paper_id, stem_id, option_id, user_id, answer_text)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.paperId},#{item.stemId},#{item.optionId},#{item.userId},#{item.answerText})
        </foreach>
    </insert>
    <insert id="insertPaper" useGeneratedKeys="true" keyProperty="id">
        insert into w_paper(name, description, state) values (#{name},#{description},0)
    </insert>
    <insert id="insertStem" useGeneratedKeys="true" keyProperty="id">
        insert into w_stem (title, score,`type`,required,category) values (#{title},#{score},#{type},#{required},#{category})
    </insert>
    <insert id="insertPaperStem" useGeneratedKeys="true" keyProperty="id">
        insert into w_paper_stem (`index`, paper_id, stem_id) values(#{index},#{paperId},#{stemId})
    </insert>
    <insert id="insertOption" useGeneratedKeys="true" keyProperty="id">
        insert into w_option (name, score, `index`, stem_id) values (#{name},#{score},#{index},#{stemId})
    </insert>
    <update id="update">
        update w_paper
        set name=#{name},
            description=#{description},
            updated_time=now()
        where id = #{id}
    </update>
    <update id="updateState">
        update w_paper set state=#{state}
        where id in
        <foreach collection="paperIds" item="item" index="index"
                 open="(" separator="," close=")">#{item}
        </foreach>
    </update>
    <update id="updateSend">
        update w_paper_send
        set state=1
        where user_id = #{userId}
          and paper_id = #{paperId}
    </update>
    <delete id="delete">
        delete from w_paper where id in
        <foreach collection="paperIds" item="item" index="index"
                 open="(" separator="," close=")">#{item}
        </foreach>
    </delete>
    <delete id="clearAnswers">
        delete
        from w_paper_submit
        where paper_id = #{paperId}
          and user_id = #{userId}
    </delete>

    <select id="page" resultType="com.czxy.manage.model.entity.PaperEntity">
        select
        id, name, description, updated_time as updatedTime, created_time as createdTime, state
        from w_paper
        where 1=1
        <if test="param != null and param != ''">
            and name like '%${param}%'
        </if>
        order by id desc
    </select>
    <select id="get" resultType="com.czxy.manage.model.entity.PaperPageEntity">
        select
        p.id,p.name,p.description,s.created_time as createdTime,s.state
        from w_paper p
        left join w_paper_send s
        on p.id=s.paper_id
        where s.user_id=#{userId}
        <if test="param != null and param != ''">
            and p.name like '%${param}%'
        </if>
    </select>
    <select id="queryPaperDetail" resultType="com.czxy.manage.model.entity.PaperDetailEntity">
        select p.id, p.name, p.description,
        ws.id as stemId, ws.type, ws.score, ws.title, ws.required, ws.category,
        wps.`index` as `index`,
        wo.id as optionId, wo.score as optionScore, wo.name as optionName, wo.`index` as optionIndex,
        w.answer_text as answerText, w.id as answerId ,
        w.stem_id as submitId,w.user_id as userId,u.name as userName,
        case when w.id is null THEN 0 ELSE 1 END as optionSelected
        from w_paper p
        left join w_paper_stem wps on p.id = wps.paper_id
        left join w_stem ws on wps.stem_id = ws.id
        left join w_option wo on ws.id = wo.stem_id
        left join w_paper_submit w on w.paper_id = p.id and w.option_id = wo.id
        <if test="userId != null and userId != ''">
            and w.user_id = #{userId}
        </if>
        left join user u on w.user_id = u.id
        where p.id = #{paperId} and wo.id is not null
        UNION ALL

        select p.id, p.name, p.description,
        ws.id as stemId, ws.type, ws.score, ws.title, ws.required, ws.category,
        wps.`index` as `index`,
        wo.id as optionId, wo.score as optionScore, wo.name as optionName, wo.`index` as optionIndex,
        w.answer_text as answerText, w.id as answerId ,
        w.id as submitId,w.user_id as userId,u.name as userName,
        case when w.id is null THEN 0 ELSE 1 END as optionSelected
        from w_paper p
        left join w_paper_stem wps on p.id = wps.paper_id
        left join w_stem ws on wps.stem_id = ws.id
        left join w_option wo on ws.id = wo.stem_id
        left join w_paper_submit w on w.paper_id = p.id and w.stem_id = ws.id
        inner join user u on w.user_id = u.id
        <if test="userId != null and userId != ''">
            and w.user_id = #{userId}
        </if>
        where p.id = #{paperId} and w.option_id is NULL

        order by `index`,optionIndex

    </select>
    <select id="queryPaper" resultType="com.czxy.manage.model.entity.PaperEntity">
        select
        name, description,state
        from w_paper
        where id=#{paperId}
    </select>
    <select id="queryPaperStem"
            resultType="com.czxy.manage.model.entity.questionnaire.stem.PaperCopyStemEntity">
        select
        stem_id as stemId,`index`,paper_id as paperId
        from w_paper_stem
        where paper_id=#{paperId}
    </select>
    <select id="queryStem" resultType="com.czxy.manage.model.entity.questionnaire.stem.StemEntity">
        select
        title, score,`type`,required,category
        from w_stem
        where id=#{stemId}
    </select>
    <select id="queryOption" resultType="com.czxy.manage.model.entity.questionnaire.stem.OptionEntity">
        select
        name, score, `index`, stem_id as stemId
        from w_option
        where stem_id=#{stemId}
    </select>
    <select id="querySendState" resultType="com.czxy.manage.model.entity.questionnaire.PaperSendEntity">
        select state from w_paper_send
        where user_id = #{userId} and paper_id = #{paperId} order by id desc limit 1
    </select>
</mapper>