<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czxy.manage.dao.UserMapper">
    <sql id="base_column">
        id, name, idcard, phone, gender, position, age, birthday, category,head_img as headImg,
        wechat_id as wechatId,
        updated_time as updatedTime,
        created_time as createdTime,
        org_id as orgId,
        nation,
        nativeplace as nativePlace
    </sql>
    <insert id="insert" parameterType="com.czxy.manage.model.entity.UserEntity" useGeneratedKeys="true"
            keyProperty="id">
        insert into user
        (name, idcard, phone, gender, position, age,
         birthday, category, wechat_id, org_id, nation,
         nativeplace, education, politics, head_img)
        values (#{name}, #{idCard}, #{phone},
                #{gender}, #{position}, #{age},
                #{birthday}, 2, #{wechatId},
                #{orgId}, #{nation}, #{nativePlace},
                #{education}, #{politics}, #{headImg});
    </insert>
    <insert id="batchInsert" useGeneratedKeys="true"
            keyProperty="id">
        insert into user
        (name, idcard, phone, gender,
        position, age, birthday,
        category, wechat_id,org_id,
        nation,nativeplace,education,
        politics,head_img)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.name}, #{item.idCard}, #{item.phone}, #{item.gender},
            #{item.position}, #{item.age}, #{item.birthday}, #{item.category},
            #{item.wechatId}, #{item.orgId}, #{item.nation}, #{item.nativePlace},
            #{item.education},#{item.politics},#{item.headImg})
        </foreach>

    </insert>
    <update id="update">
        update user
        set name=#{name},
            idcard=#{idCard},
            phone=#{phone},
            gender=#{gender},
            position=#{position},
            age=#{age},
            birthday=#{birthday},
            category=#{category},
            wechat_id=#{wechatId},
            updated_time=now(),
            politics=#{politics},
            org_id=#{orgId},
            nation=#{nation},
            nativeplace=#{nativePlace},
            education=#{education},
            head_img = #{headImg}
        where id = #{id}
    </update>
    <update id="updateByStudent">
        update user
        set name=#{name},
            idcard=#{idCard},
            phone=#{phone},
            gender=#{gender},
            position=#{position},
            age=#{age},
            birthday=#{birthday},
            category=#{category},
            wechat_id=#{wechatId},
            updated_time=now(),
            org_id=#{orgId},
            nation=#{nation},
            nativeplace=#{nativePlace},
            education=#{education},
            politics=#{politics},
            head_img = #{headImg}
        where id = #{userId}
    </update>
    <update id="updateByTeacher">
        update user
        set name=#{name},
            idcard=#{idCard},
            phone=#{phone},
            gender=#{gender},
            position=#{position},
            age=#{age},
            birthday=#{birthday},
            category=#{category},
            wechat_id=#{wechatId},
            updated_time=now(),
            org_id=#{orgId},
            nation=#{nation},
            nativeplace=#{nativePlace},
            education=#{education},
            politics=#{politics},
            head_img = #{headImg}
        where id = #{userId}
    </update>
    <update id="updateWechat">
        update user
        set wechat_id   =#{openId},
            updated_time=now()
        where id = #{userId}
    </update>
    <update id="updateByCustomer">
        update user
        set name=#{name},
            position=#{position},
            phone=#{phone},
            updated_time=now()
        where id = #{userId}
    </update>
    <delete id="delete">
        delete from user where id in
        <foreach collection="id" item="item" index="index"
                 open="(" separator="," close=")">#{item}
        </foreach>
    </delete>

    <select id="query" resultType="com.czxy.manage.model.entity.UserEntity">
        select
        <include refid="base_column"/>
        from user
    </select>
    <select id="queryByToken" resultType="com.czxy.manage.model.entity.UserEntity">
        select u.id,
               u.name,
               u.idcard,
               u.phone,
               u.gender,
               u.position,
               u.age,
               u.birthday,
               u.category,
               u.wechat_id    as wechatId,
               u.updated_time as updatedTime,
               u.created_time as createdTime,
               u.org_id       as orgId,
               u.nation,
               u.nativeplace  as nativePlace,
               u.head_img     as headImg
        from user u
                 left join token t
                           on t.user_id = u.id
        where t.token = #{token}
        order by id desc
        limit 1
    </select>
    <select id="queryMaster" resultType="com.czxy.manage.model.entity.UserEntity">
        select
        <include refid="base_column"/>
        from user where category=3
        <if test="param != null and param != ''">
            and name like '%${param}%'
        </if>
        order by id desc
    </select>
    <select id="queryClassLeader" resultType="com.czxy.manage.model.entity.UserEntity">
        select
        u.id, u.name, u.idcard, u.phone, u.gender, u.position, u.age, u.birthday, u.category,
        u.wechat_id as wechatId,
        u.updated_time as updatedTime,
        u.created_time as createdTime,
        u.org_id as orgId,
        u.nation,
        u.nativeplace as nativePlace,
        u.head_img as headImg
        from user u
        left join student s
        on s.user_id = u.id
        where s.type=10
        <if test="param != null and param != ''">
            and name like '%${param}%'
        </if>
        order by id desc
    </select>
    <select id="queryId" resultType="java.lang.Integer">
        select id
        from user
        where phone = #{phone}
        <if test="name != null and name != ''">
            and name =#{name}
        </if>
    </select>
    <select id="queryByPhones" resultType="com.czxy.manage.model.entity.UserEntity">
        select id, name, phone ,head_img as headImg
        from user
        where phone
        in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
    <select id="queryByWechatId" resultType="com.czxy.manage.model.entity.UserEntity">
        select
        <include refid="base_column"/>
        from user where wechat_id=#{openId}
    </select>
    <select id="queryclassName" resultType="com.czxy.manage.model.entity.StudentClassNameEntity">
        select u.id,
               u.name,
               u.idcard,
               u.phone,
               u.gender,
               u.position,
               u.age,
               u.birthday,
               u.category,
               u.wechat_id   as wechatId,
               u.org_id      as orgId,
               u.nation,
               u.nativeplace as nativePlace,
               u.education,
               u.politics,
               u.head_img    as headImg,
               c.name        as className,
               c.begin_time  as beginTime,
               c.end_time    as endTime
        from user u
                 left join student s
                           on u.id = s.user_id
                 left join class c
                           on c.id = s.class_id
        where u.id = #{userId}
        order by c.begin_time desc
        limit 1
    </select>
    <select id="queryByUserId" resultType="com.czxy.manage.model.entity.UserEntity">
        select u.id,
               u.name,
               u.idcard,
               u.phone,
               u.gender,
               u.position,
               u.age,
               u.birthday,
               u.category,
               u.wechat_id   as wechatId,
               u.org_id      as orgId,
               o.name        as orgName,
               u.nation,
               u.nativeplace as nativePlace,
               u.education,
               u.politics,
               u.head_img    as headImg
        from user u
                 left join org o
                           on u.org_id = o.id
        where u.id = #{userId}
        order by u.id desc
        limit 1
    </select>
    <select id="queryClassId" resultType="com.czxy.manage.model.entity.ClassEntity">
        select c.id,
               c.name,
               c.org_id           as orgId,
               c.begin_time       as beginTime,
               c.end_time         as endTime,
               c.arrange_id       as arrangeId,
               c.recommend_org_id as recommendOrgId,
               c.composition_id   as compositionId,
               c.duration,
               c.province_id      as provinceId,
               c.city_id          as cityId,
               c.county_id        as countyId,
               c.addr
        from user u
                 left join student s
                           on u.id = s.user_id
                 left join class c
                           on s.class_id = c.id
        where u.id = #{id}
          and c.id is not null
    </select>
    <select id="queryFile" resultType="com.czxy.manage.model.vo.files.FileInfo">
        select
        f.name,f.code,f.extension,f.size,f.url,f.id,f.created_time as createdTime
        from class c
        left join class_file cf
        on c.id=cf.class_id
        left join file f
        on cf.file_id=f.id
        where f.id is not null and c.id in
        <foreach collection="classIds" item="item" index="index"
                 open="(" separator="," close=")">#{item}
        </foreach>
    </select>
    <select id="queryWechatClass" resultType="com.czxy.manage.model.vo.classes.ClassWechatInfo">
        with temp as (
            select count(ca.id) as amount, c.id
            from class c
                     left join course_arrange ca on c.arrange_id = ca.arrange_id
                     left join student s on s.class_id = c.id
            where s.user_id = #{userId}
            group by c.id
        ),
             studentNumber as (
                 select count(s.id) as number, c.id
                 from student s
                          left join class c on s.class_id = c.id
                 group by c.id
             )
        select c.name
             , c.id
             , c.begin_time   as beginTime
             , c.end_time     as endTime
             , c.created_time as createdTime
             , cm.name        as compositionName
             , t.amount
             , sn.number
        from class c
                 left join student s
                           on c.id = s.class_id
                 left join user u
                           on u.id = s.user_id
                 left join composition cm
                           on c.composition_id = cm.id
                 left join temp t
                           on t.id = c.id
                 left join studentNumber sn
                           on sn.id = c.id
        where u.id = #{userId}
        order by c.created_time desc
    </select>
    <select id="queryByUserIds" resultType="java.lang.String">
        select distinct wechat_id from user where id in
        <foreach collection="list" item="item" separator="," close=")" open="(">
            #{item}
        </foreach>
    </select>

</mapper>