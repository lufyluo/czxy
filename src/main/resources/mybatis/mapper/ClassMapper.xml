<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czxy.manage.dao.ClassMapper">
    <insert id="insert" useGeneratedKeys="true"
            keyProperty="id">
        insert into class(name, province_id, city_id, county_id, org_id, arrange_id, recommend_org_id, composition_id,
                          begin_time, end_time, duration, addr,classroom,chat_off)
        values (#{name}, #{provinceId}, #{cityId}, #{countyId}, #{orgId}, #{arrangeId}, #{recommendOrgId},
                #{compositionId},
                #{beginTime}, #{endTime}, #{duration}, #{addr},#{classroom},#{chatOff})
    </insert>
    <update id="update">
        update class
        set name             = #{name}
          , province_id      = #{provinceId}
          , city_id          = #{cityId}
          , county_id        = #{countyId}
          , org_id           = #{orgId}
          , begin_time       = #{beginTime}
          , end_time         = #{endTime}
          , arrange_id       = #{arrangeId}
          , recommend_org_id = #{recommendOrgId}
          , duration         = #{duration}
          , composition_id   = #{compositionId}
          , classroom        = #{classroom}
          , chat_off         = #{charOff}
          , updated_time     = now()
        where id = #{id}
    </update>
    <update id="clearStudent">
        update student
        set class_id = null
        where class_id = #{classId}
    </update>
    <delete id="delete">
        delete from class where id in
        <foreach collection="id" item="item" index="index"
                 open="(" separator="," close=")">#{item}
        </foreach>
    </delete>

    <select id="queryAll" resultType="com.czxy.manage.model.entity.ClassOrgEntity">
        select
        c.id
        ,c.name
        ,c.province_id as provinceId
        ,c.city_id as cityId
        ,c.county_id as countyId
        ,c.org_id as orgId
        ,c.begin_time as beginTime
        ,c.end_time as endTime
        ,c.arrange_id as arrangeId
        ,c.composition_id as compositionId
        ,c.duration
        ,com.name as composition
        ,c.recommend_org_id as recommendOrgId
        ,o1.name as recommendOrgName
        ,c.addr
        ,c.updated_time as updatedTime, c.created_time as createdTime
        ,o.name as orgName
        ,cm.user_id as masterId
        ,u.name as masterName
        ,u1.name as leaderName
        ,s.user_id as leaderId
        ,arr.name as arrangeName
        from class c
        left join org o
        on c.org_id = o.id
        left join org o1
        on c.recommend_org_id = o1.id
        left join class_master cm
        on c.id = cm.class_id and cm.type = 0
        left join user u
        on cm.user_id = u.id
        left join student s
        on s.class_id = c.id and s.type = 10
        left join user u1
        on s.user_id = u1.id
        left join composition com
        on c.composition_id = com.id
        left join arrange arr
        on arr.id = c.arrange_id
        where 1=1
        <if test="param != null and param != ''">
            and c.name like '%${param}%' or o.name like '%${param}%' or u.name like '%${param}%'
        </if>
        <if test="compositionId !=null and compositionId>0">
            and com.id = #{compositionId}
        </if>
        order by c.id desc
    </select>
    <select id="query" resultType="com.czxy.manage.model.entity.ClassInformationEntity">
        select c.id,
               c.name,
               c.province_id      as provinceId,
               c.city_id          as cityId,
               c.county_id        as countyId,
               c.org_id           as orgId,
               c.begin_time       as beginTime,
               c.end_time         as endTime,
               c.arrange_id       as arrangeId,
               c.recommend_org_id as recommendOrgId,
               c.composition_id   as compositionId,
               c.updated_time     as updatedTime,
               c.created_time     as createdTime,
               c.appellation,
               c.classroom,
               c.chat_off         as charOff,
               c.duration         as duration,
               o.name             as orgName,
               a.path             as addressName,
               u.name             as masterName,
               ul.name            as leaderName,
               og.name            as recommendOrgName
        from class c
                 left join org o
                           on c.org_id = o.id
                 left join address a
                           on c.county_id = a.id
                 left join class_master cm
                           on c.id = cm.class_id
                 left join user u
                           on cm.user_id = u.id
                 left join student s
                           on s.class_id = c.id and s.type = 10
                 left join user ul
                           on ul.id = s.user_id
                 left join org og
                           on c.recommend_org_id = og.id
        where c.id = #{id}
    </select>
    <select id="queryAllStudent" resultType="com.czxy.manage.model.entity.ClassStudentEntity">
        select
        u.id as userId,
        u.name as userName,
        u.idcard as userIdCard,
        u.phone as userPhone,
        u.gender as userGender,
        u.position as userPosition,
        u.age as userAge,
        u.birthday as userBirthday,
        u.category as userCategory,
        u.wechat_id as userWechatId,
        u.updated_time as updatedTime,
        u.created_time as createdTime,
        u.org_id as userOrgId,
        u.nation as userNation,
        u.nativeplace as userNativeplace,
        u.politics,
        s.type as StudentType,
        s.id as studentId,
        s.id as id,
        s.org_name as userOrgName
        from student s
        left join user u
        on s.user_id = u.id
        <if test="classId != null">
            where s.class_id = #{classId}
        </if>
        order by s.id desc
    </select>
    <select id="queryByName" resultType="java.lang.Integer">
        select id
        from class
        where name = #{name}
        order by id desc
        limit 1
    </select>
    <select id="queryClass" resultType="com.czxy.manage.model.entity.ClassEntity">
        select id,
               name,
               org_id           as orgId,
               begin_time       as beginTime,
               end_time         as endTime,
               arrange_id       as arrangeId,
               recommend_org_id as recommendOrgId,
               composition_id   as compostionId,
               duration,
               province_id      as provinceId,
               city_id          as cityId,
               county_id        as countyId,
               addr,
               classroom,
               chat_off         as chatOff
        from class
        where id = #{classId}
    </select>
    <select id="queryRecentByStudentUserId" resultType="java.lang.Integer">
        select class_id
        from student s
        where user_id = #{userId}
          and class_id is not null
        union all
        select class_id
        from class_master s
        where user_id = #{userId}
          and class_id is not null
        order by class_id desc
        limit 1
    </select>
    <select id="queryCount" resultType="com.czxy.manage.model.entity.CountEntity">
        select count(s.class_id) as studentCount,c.id as classId
        from class c
        left join student s
        on c.id=s.class_id
        where c.id in
        <foreach collection="collect" item="item" index="index"
                 open="(" separator="," close=")">#{item}
        </foreach>
        group by s.class_id,c.id
    </select>
    <select id="queryByTime" resultType="com.czxy.manage.model.vo.index.RankInfo">
        select count(id) as value,
        date_format(created_time, '%Y-%m') as name
        from class
        where #{beginTime} <![CDATA[<]]> created_time
        <if test="endTime != null">
            and #{endTime} > created_time
        </if>
        group BY date_format(created_time, '%Y-%m')
    </select>
</mapper>