<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czxy.manage.dao.StudentMapper">
    <sql id="base_column">
        id, sign_flag as sign, user_id as userId,class_id  as classId,type,
        updated_time as updatedTime, created_time as createdTime
    </sql>
    <insert id="insert" parameterType="com.czxy.manage.model.entity.StudentEntity" useGeneratedKeys="true"
            keyProperty="id">
        insert into student (sign_flag, class_id, user_id, type, org_name)
        VALUES (0, #{classId}, #{userId}, #{type}, #{org_name})
    </insert>
    <insert id="batchInsert" parameterType="com.czxy.manage.model.entity.StudentEntity" useGeneratedKeys="true"
            keyProperty="id">
        insert into
        student (sign_flag, class_id, user_id, type, org_name)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (0,#{item.classId},#{item.userId},#{item.type},#{item.orgName})
        </foreach>
    </insert>
    <delete id="delete">
        delete from student where id in
        <foreach collection="studentIds" item="item" index="index"
                 open="(" separator="," close=")">#{item}
        </foreach>
    </delete>
    <select id="query" resultType="com.czxy.manage.model.entity.StudentDetailEntity">
        select
        s.id as id ,s.id as studentId ,sign_flag as signFlag,
        s.user_id as userId,s.class_id as classId,type, s.org_name as orgName,
        u.id as userId, u.name, u.idcard, u.phone, u.gender, u.position, u.age, u.birthday, u.category,
        u.education,
        u.wechat_id as wechatId,
        u.org_id as orgId,
        u.nation,
        u.nativeplace as nativePlace,
        u.politics,
        c.name as className,c.begin_time as beginTime,c.end_time as endTime,
        c.duration
        from
        student s
        left join user u
        on s.user_id = u.id
        left join class c
        on s.class_id = c.id
        where
        s.id in ( select max(id) as id from student group by user_id )
        <if test="param != null and param != '' ">and u.name like '%${param}%'</if>
        <if test="provinceId != null and provinceId>0 ">and c.province_id = #{provinceId}</if>
        <if test="cityId != null and cityId>0 ">and c.city_id = #{cityId}</if>
        <if test="countyId != null and countyId>0 ">and c.county_id = #{countyId}</if>
        <if test="classId != null and classId >0 ">and s.class_id= #{classId}</if>
        <if test="excludeClassId != null and excludeClassId >0 ">and (s.class_id != #{excludeClassId} or s.class_id is NULL)</if>
        order by s.id desc
    </select>
    <select id="queryByStudentId" resultType="com.czxy.manage.model.entity.StudentUpdateEntity">
        select sign_flag as signFlag, class_id as classId, user_id as userId, type
        from student
        where id = #{id}
    </select>
    <select id="queryByUserId" resultType="java.lang.Boolean">
        select id
        from student
        where user_id = #{userId}
    </select>
    <select id="queryStudent" resultType="com.czxy.manage.model.entity.StudentEntity">
        select id, sign_flag as signFlag, class_id as classId, user_id as userId, type, org_id as orgId
        from student
        where user_id = #{userId} AND class_id is not NULL
        order by id desc
        limit 1
    </select>
    <update id="sign">
        update student set sign_flag = 1 , updated_time=now() where id in
        <foreach collection="studentIds" item="item" index="index"
                 open="(" separator="," close=")">#{item}
        </foreach>
    </update>
    <update id="update">
        update student
        set class_id=#{classId},
            type=#{type},
            updated_time=now()
        where id = #{id}
    </update>
    <update id="clearLeader">
        update student
        set type        = 0,
            updated_time=now()
        where class_id = #{classId}
          and type = 10
    </update>
    <update id="setLeader">
        update student
        set type        = 10,
            updated_time=now()
        where class_id = #{classId}
          and user_id = #{userId}
    </update>
    <update id="updateClass">
        <foreach collection="list" item="item" open="" close=";" separator=";">
            update student set
            class_id=#{item.classId},
            type=#{item.type},
            updated_time=now()
            where id=#{item.studentId}
        </foreach>
    </update>
    <update id="updateByUserId">
        update student
        set sign_flag   = 1,
            updated_time=now()
        where user_id = #{userId}
    </update>
    <update id="updateStudentClass">
        update student set class_id=#{classId},updated_time=now() where id in
        <foreach collection="studentIds" item="item" index="index"
                 open="(" separator="," close=")">#{item}
        </foreach>
    </update>
</mapper>